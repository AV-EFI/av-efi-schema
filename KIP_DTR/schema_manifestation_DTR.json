{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "additionalProperties": false,
    "description": "Profile for the movie database at ZIB for versions ( context : movie_db_ZIB )",
    "properties": {
        "movie_db_manifestation": {
            "additionalProperties": false,
            "description": "Profile for the movie database at ZIB for versions ( context : movie_db_ZIB )",
            "properties": {
                "KernelInformationProfile": {
                    "description": "Handle-String in its general syntax. Problem here: Schema validation does not work properly, because implementations for ecma-262-RegExp do not seem to correctly parse hex coded regular expressions ",
                    "pattern": "^([\\x00-\\x2D,\\x30-\\x3F,\\x41-\\xFF])+(\\.([\\x00-\\x2D,\\x30-\\x3F,\\x41-\\xFF])+)*\\/([\\x00-\\xFF])+$",
                    "type": "string"
                },
                "has_agent": {
                    "description": "An entity that is involved in the creation, realization, curation or exploitation of a Manifestation (Corporate Body) ( context : movie_db_ZIB )",
                    "items": {
                        "additionalProperties": false,
                        "description": "The name of an organisation or company under whose financial, technical and organisational management a cinematographic work is made. ( context : movie_db_ZIB )",
                        "properties": {
                            "identifier_uri": {
                                "description": "URI: Uniform Resource Identifier ( context : generic )",
                                "pattern": "^(([^:/?#]+):)(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?",
                                "type": "string"
                            },
                            "name": {
                                "description": "string consisting of unicode characters except newline.",
                                "pattern": "(.)*",
                                "type": "string"
                            }
                        },
                        "required": [
                            "name"
                        ],
                        "type": "object"
                    },
                    "type": "array"
                },
                "has_data_objects": {
                    "description": "Reference to a work using ePIC PID (context: MovieArchives)",
                    "items": {
                        "additionalProperties": false,
                        "description": "Handle-String in its ePIC ASCII numbering syntax",
                        "pattern": "^21(\\.([0-9,A-Z,a-z])+)*\\/([!-~])+$",
                        "type": "string"
                    },
                    "type": "array"
                },
                "identifier": {
                    "description": "Handle-String in its ePIC ASCII numbering syntax",
                    "pattern": "^21(\\.([0-9,A-Z,a-z])+)*\\/([!-~])+$",
                    "type": "string"
                },
                "is_version_of": {
                    "description": "Reference to a work using ePIC PID (context: MovieArchives)",
                    "items": {
                        "additionalProperties": false,
                        "description": "Handle-String in its ePIC ASCII numbering syntax",
                        "pattern": "^21(\\.([0-9,A-Z,a-z])+)*\\/([!-~])+$",
                        "type": "string"
                    },
                    "type": "array"
                },
                "last_modified": {
                    "description": "Date and time of last update to metadata record. ( context : movie_db_ZIB )",
                    "pattern": "^([0-9]{4})(-)?([0][1-9]|1[0-2])(-)?([0-2][0-9]|3[0-1])([T| ]([0-1][0-9]|2[0-3])(:)?([0-5][0-9])(:)?([0-5][0-9](\\.[0-9]*)?(Z|([\\+|-]([0-1][0-9]|2[0-3])(:)?([0-5][0-9])?))?))?$",
                    "type": "string"
                },
                "manifestation_types": {
                    "description": "implicitly created because of multiple occurence of child type \u2018manifestationType\u2019: A word or phrase denoting the relationship between the manifestation and the variant or cinematographic work that it manifests. May be omitted if no other manifestation is known. ( context : movie_db_ZIB )",
                    "items": {
                        "additionalProperties": false,
                        "enum": [
                            "Broadcast",
                            "Home viewing publication",
                            "Internet",
                            "Theatrical distribution",
                            "Unreleased",
                            "Non-theatrical distribution",
                            "Not for release",
                            "Pre-Release",
                            "Preservation/Restoration ",
                            "Unknown"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "production_year": {
                    "description": "Production year or timespan ( context : movie_db_ZIB )",
                    "pattern": "^([0-9]{4})$",
                    "type": "string"
                },
                "release_date": {
                    "description": "Publication Date ( context : movie_db_ZIB )",
                    "pattern": "^([0-9]{4})-([0]?[1-9]|1[0-2])-([0-2][0-9]|3[0-1])$",
                    "type": "string"
                },
                "same_as": {
                    "description": "Reference to a work using ePIC PID (context: MovieArchives)",
                    "items": {
                        "additionalProperties": false,
                        "description": "Handle-String in its ePIC ASCII numbering syntax",
                        "pattern": "^21(\\.([0-9,A-Z,a-z])+)*\\/([!-~])+$",
                        "type": "string"
                    },
                    "type": "array"
                },
                "schema_version": {
                    "description": "Version for a WORK (Context: MovieArchives)",
                    "enum": [
                        "0.1"
                    ],
                    "type": "string"
                },
                "source": {
                    "additionalProperties": false,
                    "description": "The name of the archive or other organisation supplying the record. ( context : movie_db_ZIB )",
                    "properties": {
                        "sourceAttribution": {
                            "additionalProperties": false,
                            "description": "(Context: MovieArchives)",
                            "properties": {
                                "attributionDate": {
                                    "description": "(Context: MovieArchives)",
                                    "pattern": "^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?)$",
                                    "type": "string"
                                },
                                "attributionType": {
                                    "description": "(Context: MovieArchives)",
                                    "enum": [
                                        "Created",
                                        "Modified"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "sourceDate": {
                            "description": "combined date and time representations as string. It refers to RFC3339 and ISO 8601 and allows to give just date, week or ordinal date notation and combined date and time in UTC. Defined by regular expression.",
                            "pattern": "^([0-9]{4})(-)?([0][1-9]|1[0-2])(-)?([0-2][0-9]|3[0-1])([T| ]([0-1][0-9]|2[0-3])(:)?([0-5][0-9])(:)?([0-5][0-9](\\.[0-9]*)?(Z|([\\+|-]([0-1][0-9]|2[0-3])(:)?([0-5][0-9])?))?))?$",
                            "type": "string"
                        },
                        "sourceIdentifier": {
                            "description": "URI: Uniform Resource Identifier ( context : generic )",
                            "pattern": "^(([^:/?#]+):)(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?",
                            "type": "string"
                        },
                        "sourceName": {
                            "description": "string consisting of unicode characters. ( context : generic )",
                            "pattern": "(.|\n)*",
                            "type": "string"
                        }
                    },
                    "required": [
                        "sourceName"
                    ],
                    "type": "object"
                },
                "titles": {
                    "description": "A word, phrase, character, or group of characters, normally appearing in an item, naming the item or the work contained in it. (Context: MovieArchives, AV-EFI)",
                    "items": {
                        "additionalProperties": false,
                        "description": "A word, phrase, character, or group of characters, normally appearing in an item, naming the item or the work contained in it. (Context: MovieArchives, AV-EFI) ",
                        "properties": {
                            "titleType": {
                                "description": "The type of a title. Controlled List Values: [Original Title, Release Title, Archive Title, Alternative Title, Sort Title]. (context : MovieArchives)",
                                "enum": [
                                    "Original Title",
                                    "Release Title",
                                    "Archive Title",
                                    "Alternative Title",
                                    "Sort Title"
                                ],
                                "type": "string"
                            },
                            "titleValue": {
                                "description": "string consisting of unicode characters. ( context : generic )",
                                "pattern": "(.|\n)*",
                                "type": "string"
                            }
                        },
                        "required": [
                            "titleValue",
                            "titleType"
                        ],
                        "type": "object"
                    },
                    "minItems": 1,
                    "type": "array"
                }
            },
            "required": [
                "is_version_of",
                "has_data_objects",
                "source",
                "last_modified"
            ],
            "type": "object"
        }
    },
    "required": [
        "movie_db_manifestation"
    ],
    "title": "Validation schema for type 'movie_db_manifestation' with the PID '21.T11148/ef6836b80e4d64e574e3'",
    "type": "object"
}