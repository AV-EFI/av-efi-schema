{{ python_imports }}

metamodel_version = "{{metamodel_version}}"
version = "{{version if version else None}}"


{{ base_model }}

{% if injected_classes %}
    {% for c in injected_classes%}

{{ c }}
    {% endfor %}
{% endif %}
{% if meta %}
linkml_meta = LinkMLMeta({{ meta | pprint | indent(width=4) }} )
{% else %}
linkml_meta = None
{% endif %}
{% if enums %}
    {% for e in enums.values() %}

{{ e }}
    {% endfor %}
{% endif %}

{% for c in classes.values() %}

{{ c }}
{% endfor %}

def treat_empty_lists_as_none(instance: Any, handler, info):
    if info.exclude_none:
        _instance = instance.copy()
        for field, field_info in type(_instance).model_fields.items():
            if getattr(_instance, field) == [] and not(
                    field_info.is_required()):
                setattr(_instance, field, None)
    return handler(_instance, info)

RecordTypes = TypeVar('RecordTypes', bound=list[Annotated[
    WorkVariant | Manifestation | Item, Field(discriminator='category'),
]])

class MovingImageRecords(RootModel[RecordTypes]):
    pass

{% include 'footer.py.jinja' %}
