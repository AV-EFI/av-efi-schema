class {{ name }}(BaseModel):
    model_config = ConfigDict(
        validate_assignment = True,
        validate_default = True,
        extra = "{{ extra_fields }}",
        arbitrary_types_allowed = True,
        use_enum_values = True,
        strict = {{ strict }},
    )
{% if fields is not none %}
    {% for field in fields %}
    {{ field }}
    {% endfor %}
{% endif %}

    def drop_empty_lists(self):
        for field, info in type(self).model_fields.items():
            if getattr(self, field) == [] and info.default is None:
                setattr(self, field, None)

    def model_dump(self, *args, exclude_none=False, **kwargs):
        if exclude_none:
            self.drop_empty_lists()
        return super().model_dump(*args, exclude_none=exclude_none, **kwargs)

    def model_dump_json(self, *args, exclude_none=False, **kwargs):
        if exclude_none:
            self.drop_empty_lists()
        return super().model_dump(*args, exclude_none=exclude_none, **kwargs)
